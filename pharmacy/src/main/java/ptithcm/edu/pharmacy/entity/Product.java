package ptithcm.edu.pharmacy.entity;

import jakarta.persistence.*;
import lombok.*;

import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.math.BigDecimal; // Import BigDecimal
import java.time.LocalDateTime;
import java.util.ArrayList; // Thêm import này
import java.util.List;    // Thêm import này

@Entity
@Table(name = "Products")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
public class Product {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "product_id")
    private Integer id;

    @Column(name = "name", nullable = false, length = 200) // Adjusted length based on SQL
    private String name;

    // Added slug field based on SQL (NOT NULL, UNIQUE)
    @Column(name = "slug", nullable = false, unique = true, length = 220)
    private String slug;

    @Column(name = "sku", unique = true, length = 100) // Kept SKU, adjusted length, nullable based on SQL
    private String sku;

    @Column(name = "description", columnDefinition = "TEXT")
    private String description;

    // Added fields from SQL
    @Column(name = "ingredients", columnDefinition = "TEXT")
    private String ingredients;

    @Column(name = "usage_instructions", columnDefinition = "TEXT")
    private String usageInstructions;

    @Column(name = "contraindications", columnDefinition = "TEXT")
    private String contraindications;

    @Column(name = "side_effects", columnDefinition = "TEXT")
    private String sideEffects;

    @Column(name = "storage_conditions", length = 255)
    private String storageConditions;

    @Column(name = "packaging", length = 150)
    private String packaging;

    @Column(name = "unit", length = 50)
    private String unit;

    @Column(name = "image_url", length = 255) // Adjusted length
    private String imageUrl;

    // Replaced isActive with status Enum based on SQL
    @Enumerated(EnumType.STRING) // Ensure this annotation is present and set to STRING
    @Column(name = "status", nullable = false, length = 20)
    private ProductStatus status = ProductStatus.ACTIVE; // Default value

    // Added field from SQL
    @Column(name = "is_prescription_required", nullable = false, columnDefinition = "BOOLEAN DEFAULT false")
    private boolean isPrescriptionRequired = false; // Default in Java entity

    // Added fields from SQL
    @Column(name = "average_rating", precision = 3, scale = 2, columnDefinition = "DECIMAL(3,2) DEFAULT 0.00")
    // Change Double to BigDecimal
    private BigDecimal averageRating = BigDecimal.ZERO; // Use BigDecimal and initialize with BigDecimal.ZERO

    @Column(name = "review_count", columnDefinition = "INT DEFAULT 0")
    private Integer reviewCount = 0;

    // Removed price and stockQuantity as they seem to be in Branch_Inventory
    // private BigDecimal price;
    // private Integer stockQuantity;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "category_id") // Nullable based on SQL
    private Category category;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "brand_id") // Nullable based on SQL
    private Brand brand;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "manufacturer_id") // Nullable based on SQL
    private Manufacturer manufacturer;

    @CreationTimestamp
    @Column(name = "created_at", nullable = false, updatable = false)
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at", nullable = false)
    private LocalDateTime updatedAt;

    // Thêm mối quan hệ OneToMany với OrderItem
    @OneToMany(mappedBy = "product", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    private List<OrderItem> orderItems = new ArrayList<>();

    // Constructors, Getters, Setters (generated by Lombok)
}